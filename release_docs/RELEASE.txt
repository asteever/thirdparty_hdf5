HDF5 version 1.8.15-snap13 currently under development
================================================================================

INTRODUCTION
============

This document describes the differences between HDF5-1.8.14 and 
HDF5-1.8.15-*, and contains information on the platforms tested and 
known problems in HDF5-1.8.15-*. 
For more details, see the files HISTORY-1_0-1_8_0_rc3.txt 
and HISTORY-1_8.txt in the release_docs/ directory of the HDF5 source.

Links to the HDF5 1.8.14 source code, documentation, and additional materials
can be found on the HDF5 web page at:

     http://www.hdfgroup.org/products/hdf5/

The HDF5 1.8.14 release can be obtained from:

     http://www.hdfgroup.org/HDF5/release/obtain5.html

User documentation for 1.8.14 can be accessed directly at this location: 

     http://www.hdfgroup.org/HDF5/doc/

New features in the HDF5-1.8.x release series, including brief general 
descriptions of some new and modified APIs, are described in the "What's New 
in 1.8.0?" document:

     http://www.hdfgroup.org/HDF5/doc/ADGuide/WhatsNew180.html

All new and modified APIs are listed in detail in the "HDF5 Software Changes 
from Release to Release" document, in the section "Release 1.8.15 (current 
release) versus Release 1.8.14

     http://www.hdfgroup.org/HDF5/doc/ADGuide/Changes.html

If you have any questions or comments, please send them to the HDF Help Desk:

     help@hdfgroup.org


CONTENTS
========

- New Features
- Support for New Platforms, Languages, and Compilers
- Bug Fixes since HDF5-1.8.14
- Supported Platforms
- Supported Configuration Features Summary
- More Tested Platforms
- Known Problems


New Features
============

    Configuration
    -------------
    - cmake minimum changed to 3.1
      (ADB - 2015/02/01)
      
    - cmakehdf5: configure options added to enable or disable the building of
      different API's and testings. See "cmakehdf5 --help" for details.
      (AKC - 2014/12/09 HDFFV-8932)

    - Remove restriction for building shared when parallel is
      enabled. --disable-shared has to be used explicitly if user wishes to
      disable shared libraries.
      (MSC - 2015/02/19 HDFFV-9069)

    - Remove infering parallel compilers to enable
      parallel. --enable-parallel has to be used explicitly to build
      parallel HDF5 regardless of the compiler type being used.
      (MSC - 2015/02/19 HDFFV-9068)

    - Remove option to enable or disable large file support. It will
      always be enabled.
      (MSC - 2015/02/19 HDFFV-9097)

    - Removed configuration feature

      When configure detected that the CodeWarrior compiler was being used it
      would define a symbol that caused a test in test/tfile.c to be skipped
      due to a broken CodeWarrior open() command.

      Since this only masks the problem instead of fixing it and we don't
      support CodeWarrior anyway, this functionality was removed.

      (DER - 2015/02/21, HDFFV-9080)

    - VMS build/test files have been removed

      HDF5 no longer supports VMS and the files were getting out of date.
      Since we have no access to a VMS machine, there is no way for us to
      maintain them.

      A Subversion tag was created at:

        https://svn.hdfgroup.uiuc.edu/tags/vms_last_support_1_8

      immediately before removing the files.

      (DER - 2015-02-26, HDFFV-9147)

    - Removal of --with-default-vfd configure option

      In theory, this option was intended to allow setting a default
      VFD that would be used by the library. In practice, the feature
      only accepted the POSIX (SEC2) VFD (already the default) and
      the stdio VFD (a demo VFD not intended for production use). The
      inability to pass key VFD parameters at configure time limits the
      full implementation of this feature, so it was retired.

      (DER - 2015-02-26, HDFFV-9081)

    - Direct VFD configure behavior

      The configure options for Linux now allow the direct VFD to built
      without passing additional compiler options/defines like _GNU_SOURCE.
      Passing --enable-direct-vfd is now all that is needed to enable
      the feature.

      The direct VFD is now disabled by default since it is intended for
      specialized audiences. It was previously enabled by default, but the
      configure script did not set correct POSIX levels, etc. making this
      a moot point.

      Note that the direct VFD can only be configured on Linux when
      the O_DIRECT flag to open()/create() and posix_memalign() function
      are available. This is unchanged from previous behavior.

      (DER - 2015-02-26, HDFFV-9057, 7567, 9088, 7566)

    - _POSIX_C_SOURCE, _GNU_SOURCE, and _BSD_SOURCE no longer exported to
      h5cc and other compiler wrappers.

      These definitions are not required for using API functions and may
      conflict with user code requirements.

      (DER - 2015-03-08, HDFFV-9152)

    - Removed the --enable-filters option from configure.

      This option allowed the user to disable selected internal filters,
      presumably to make the library smaller. It has been removed since
      it saved little space (the internal filters are small with respect
      to the overall library size) and was not generally extendible to
      the library at large due to the large number of #ifdefs that would
      be required.

      Note that this features applied to internal filters such as suffle
      and n-bit, not external filters like gzip or szip. Those are still
      enabled or disabled via their own configure options.

      (DER - 2015-03-08, HDFFV-9086)

    - Removed obsolete time functionality from configure and C library

      The library contained some residual functionality from obsolete
      time zone handling code. This has been removed and the configure
      checks for the time functions have been cleaned up.

      * Lumped all the time functionality together in configure.ac.
        This was previously more spread out due to Solaris issues
        with the ordering of certain checks.

      * Removes processing that handles __tm_gmtoff members of struct
        tm. (libc-4)

      * Removes BSDgettimeofday(). (IRIX 5.3)

      * Removes timezone struct handling in gettimeofday(). (considered
        harmful)

      Note that the HDF5 library stores timestamps in a platform-independent
      manner, so old files can still be read. This only affects convering
      system time to HDF5 timestamps.

      The library currently uses the tm_gmtoff member of the tm struct
      (preferred, if available) or the timezone global variable to
      construct HDF5 timestamps.

      (DER - 2015-03-09, HDFFV-9083 and 9085)

    Library
    -------
    - None
 
    Parallel Library
    ----------------
    - None
 
    Tools
    -----
    - None

    High-Level APIs
    ---------------
    - None

    Fortran API
    -----------
    - Added new global variables (equivalent to the C definitions--minus the '_F'):
         H5G_UDLINK_F  
         H5G_SAME_LOC_F
	 H5O_TYPE_UNKNOWN_F
	 H5O_TYPE_GROUP_F
	 H5O_TYPE_DATASET_F
	 H5O_NAMED_DATATYPE_F
	 H5O_TYPE_NTYPES_F

	 (MSB, 2015-2-3, HDFFV-9040)


    C++ API
    -------
    - None



Support for New Platforms, Languages, and Compilers
===================================================
    - Support for Mac OS X Yosemeti 10.10 added (AKC - 2015/03/04, HDFFV-9007)
    - Support for AIX 6.1 added and AIX 5.3 is retired. (AKC - 2015/01/09)

Bug Fixes since HDF5-1.8.14
===========================

    Configuration
    -------------
    - Windows installer incorrect display of PATH environment variable.
    
      In the Windows installer, the dialog box where the user can elect to
      add the product's bin path to the %PATH% environment variable displayed
      an incorrect path. This path was missing the C:\Program Files part
      and used the POSIX file separator '/' before the bin (<path>/bin,
      instead of <path>\bin).
      
      The dialog box text was changed to simply say that the product's bin
      path would be added instead of explicitly displaying the path.
      This is in line with most installers. The reason for not fixing the 
      displayed path instead is that it is difficult to pass the correct
      path from CPack to the NSIS installer for display.

      Note that this was never a code issue - it was just a display
      problem. The installer always did the right thing when updating the
      environment variable.

      (DER - 2014/11/14, HDFFV-9016)

    Library
    -------
    - Incorrect usage of list in CMake COMPILE_DEFINITIONS set_property
    
      The CMake command, set_property with COMPILE_DEFINITIONS property
      needs a quoted semi-colon separated list of values. CMake will
      transform the list to a series of -D{value} for the compile.
      
      (ADB - 2014/12/09, HDFV-9041)
      
    - Fixed compile errors on Windows w/ Visual Studio and CMake when
      UNICODE is defined.
    
      The HDF5 library could not be built on Windows with Visual Studio when
      UNICODE was defined. This was due to incorrect use of the TEXT() macro
      and some Win32 API functions that take TCHAR parameters. The faulty
      code was a part of the filter plugin functionality. This was a
      compile-time error that only affected users who build HDF5 from source
      and define UNICODE, usually when HDF5 is being built as a part of a
      larger product. There were no run-time effects.
      
      These errors caused no problems when UNICODE was not defined. HDF5 is
      normally not built with UNICODE defined and the binaries were
      unaffected.
      
      The fix was to remove the TEXT() macro and explicitly use the
      'A' form of the Win32 API calls, which expect char strings instead of
      wchar_t strings.
      
      Note that HDF5 currently does not support Unicode file paths on Windows.
      
      (DER - 2015/02/22, HDFFV-8927)

    - Addition of error tracing functionality to several C API calls

      A bug in a text processing script caused API calls that return a
      pointer to not receive error tracing macros/functionality.

      The bug has been corrected and error tracing functionality has been
      added to the affected API calls. These functions will now correctly
      print trace information when library errors are encountered.

      (DER - 2015/02/26, HDFFV-9141)

    - H5Rdereference now checks for HADDR_UNDEF or uninitialized references

      When passed HADDR_UNDEF or uninitialized references, the previous behavior of 
      H5Rdereference was to continue to process the reference as a valid address. 
      H5Rdereference was changed to return immediately (with an error message)
      if the references are HADDR_UNDEF or uninitialized.

      (MSB - 2015/3/10, HDFFV-7959)
       

    Parallel Library
    ----------------
    - Fixed a potential memory error when performing parallel I/O on a dataset
      with a single chunk, and at least one process has nothing to do.
      (NAF - 2015/02/16)

    Performance
    -------------
    - None

    Tools
    -----
    - Benchpar.c in perform is retired. (AKC - 2014/12/19, HDFFV-8156)
    - The perform directory is moved to tools/perform for easier maintenance.
      (AKC - 2014/12/17, HDFFV-9046)

    Fortran API
    ------------
    - ISSUE: Fortran fails with --enable-fortran2003 and Intel 15.x compilers.
      
      Added BIND(C) to the offending APIs. 

      The Fortran Library (--enable-fortran2003)  now works using Intel 15.x 
      without the need for any additional compilers flags. 
      (MSB - 2015/1/26, HDFFV-9049)

    - ISSUE: h5tenum_insert_f does not work with default 8 byte integers (xlf compiler)
      
      * In the Fortran 90 API, 'value' is no longer cast into the C int type. Therefore, if
        h5tenum_insert_f is passed an 8 byte integer (via -i8) then 'value' is written as 
	the same type as the default Fortran integer type (which can be 8 bytes).

      * A new Fortran 2003 API was added which is more in line with the C API and users are strongly 
        encouraged to use the Fortran 2003 API instead of the Fortran 90 API.

	SUBROUTINE h5tenum_insert_f(type_id, name, value, hdferr)
 	 INTEGER(HID_T)  , INTENT(IN) :: type_id
 	 CHARACTER(LEN=*), INTENT(IN) :: name
 	 TYPE(C_PTR)     , INTENT(IN) :: value
 	 INTEGER, INTENT(OUT) :: hdferr

      (MSB - 2015/2/19, HDFFV-8908)

    - ISSUE: The following Fortran APIs never returned the error state (i.e. the APIs
      always returned a positive number), they were corrected to return a negative number as
      described in the Reference Manual if an error occurred:

        h5fget_file_image_f
        h5lget_name_by_idx_f
        h5oget_comment_by_name_f

      (MSB - 2015/3/19, HDF5-239)

    - ISSUE: h5pget_class_f is an ill-functioning API

      h5pget_class_f never correlated the class identifier to the property list class name (as indicated
      in the HDF5 Reference Manual), but instead returned a property list class identifier as a INTEGER.
      However, the INTEGER needed to be of type INTEGER(HID_T) to be correct.

      RESOLUTION: the h5pget_class_f API was changed to return an INTEGER(HID_T) property list class 
      identifier instead of an INTEGER. This mimics the intended behavior of the C API.

      (MSB - 2015/3/16, HDFFV5-9162)


    C++ API
    ------
    - None

    High-Level APIs:
    ------
    - Suppress warnings from flex/bison-generated code.

      Warning suppression #pragmas, etc. have been added to H5LTparse.c and
      H5LTanalyze.c. We have no control over this code since it's created by
      a generator.

      (DER - 2015/03/08 - HDFFV-9149)

    - Changed hdf5_hl.h to include the hdf5 main library "hdf5.h"

      User's no longer need to include both hdf5_hl.h and hdf5.h

      (MSB - 2015/2/14 - HDFFV-8685)

   
    - ISSUE: H5PTcreate_fl does not convert to memory type.

      H5PTcreate_fl now converts to the table's native memory datatype to fix 
      the problem of handling BE and LE packet tables.

      (MSB - 2015/2/26 - HDFFV-9042)


    - ISSUE: H5LT attribute functions fail to create attributes whose name 
      is a substring of an existing attribute.

      H5LT attribute functions can now create attributes whose name 
      is a substring of an existing attribute.

      (MSB - 2015/2/24 - HDFFV-9132)
    

    Fortran High-Level APIs:
    ------------------------
    - Fixed mismatching integer type for internal library C interface function H5tbmake_table_c.
       
      (MSB - 2015/2/18 - HDFFV-8559)
      

    Testing
    -------
    - None


Supported Platforms
===================
The following platforms are supported and have been tested for this release.
They are built with the configure process unless specified otherwise.

    AIX 6.1                       xlc/xlc_r 10.1.0.5
    (NASA G-ADA)                  xlC/xlC_r 10.1.0.5
                                  xlf90/xlf90_r 12.1.0.6

    Linux 2.6.18-308.13.1.el5PAE  GNU C (gcc), Fortran (gfortran), C++ (g++)
    #1 SMP i686 i686 i386         compilers for 32-bit applications;
    (jam)                             Version 4.1.2 20080704 (Red Hat 4.1.2-54)
                                      Version 4.8.2
                                  PGI C, Fortran, C++ Compilers for 32-bit
                                  applications;
                                      Version 13.7-0
                                  Intel(R) C, C++, Fortran Compiler for 32-bit
                                  applications;
                                      Version 14.0.2 (Build 20140120)

    Linux 2.6.18-371.6.1.el5      GNU C (gcc), Fortran (gfortran), C++ (g++)
    #1 SMP x86_64 GNU/Linux       compilers for 64-bit applications;
    (koala)                           Version 4.1.2 20080704 (Red Hat 4.1.2-54)
                                      Version 4.8.2
                                  Intel(R) C, C++, Fortran Compilers for 
                                  applications running on Intel(R) 64; 
                                      Version 14.0.2 (Build 20140120)

    Linux 2.6.32-431.11.2.el6    GNU C (gcc), Fortran (gfortran), C++ (g++)
    #1 SMP x86_64 GNU/Linux       compilers:
    (platypus)                       Version 4.4.7 20120313
                                     Version 4.8.2
                                  PGI C, Fortran, C++ for 64-bit target on 
                                  x86-64;
                                      Version 13.7-0 
                                  Intel(R) C (icc), C++ (icpc), Fortran (icc)
                                  compilers:
                                     Version 14.0.2 (Build 20140120)

    Linux 2.6.32-431.29.2.el6.ppc64 gcc (GCC) 4.4.7 20120313 (Red Hat 4.4.7-4)
    #1 SMP ppc64 GNU/Linux        g++ (GCC) 4.4.7 20120313 (Red Hat 4.4.7-4)
    (ostrich)                     GNU Fortran (GCC) 4.4.7 20120313 (Red Hat 4.4.7-4)
                                  IBM XL C/C++ V13.1
                                  IBM XL Fortran V15.1

    SunOS 5.11 32- and 64-bit     Sun C 5.12 SunOS_sparc
    (emu)                         Sun Fortran 95 8.6 SunOS_sparc
                                  Sun C++ 5.12 SunOS_sparc

    Windows 7                     Visual Studio 2008  (cmake)
                                  Visual Studio 2010 w/ Intel Fortran 14 (cmake)
                                  Visual Studio 2012 w/ Intel Fortran 15 (cmake)
                                  Visual Studio 2013 w/ Intel Fortran 15 (cmake)
                                  Cygwin(CYGWIN_NT-6.1 1.7.34(0.285/5/3) gcc(4.9.2) compiler and gfortran)
                                  (cmake and autotools)

    Windows 7 x64                 Visual Studio 2008  (cmake)
                                  Visual Studio 2010 w/ Intel Fortran 14 (cmake)
                                  Visual Studio 2012 w/ Intel Fortran 15 (cmake)
                                  Visual Studio 2013 w/ Intel Fortran 15 (cmake)
                                  
    Windows 8.1                   Visual Studio 2012 w/ Intel Fortran 15 (cmake)
                                  Visual Studio 2013 w/ Intel Fortran 15 (cmake)

    Windows 8.1 x64               Visual Studio 2012 w/ Intel Fortran 15 (cmake)
                                  Visual Studio 2013 w/ Intel Fortran 15 (cmake)

    Mac OS X Lion 10.7.5          Apple clang/clang++ version 3.0 from Xcode 4.6.1
    64-bit                        gfortran GNU Fortran (GCC) 4.8.2
    (duck)                        Intel icc/icpc/ifort version 13.0.3

    Mac OS X Mt. Lion 10.8.5      Apple clang/clang++ version 5.1 from Xcode 5.1
    64-bit    			  gfortran GNU Fortran (GCC) 4.8.2
    (swallow/kite)                Intel icc/icpc/ifort version 14.0.2

    Mac OS X Mavericks 10.9.5     Apple clang/clang++ version 6.0 from Xcode 6.1.1
    64-bit    			  gfortran GNU Fortran (GCC) 4.8.2
    (wren)                        Intel icc/icpc/ifort version 14.0.2

    Mac OS X Yosemeti 10.10.2     Apple clang/clang++ version 6.0 from Xcode 6.1.1
    64-bit    			  gfortran GNU Fortran (GCC) 4.9.2
    (osx1010dev)                  Intel icc/icpc/ifort version 15.0.1


Tested Configuration Features Summary
=====================================

    In the tables below
          y   = tested 
          n   = not tested in this release
          C   = Cluster
          W   = Workstation
          x   = not working in this release
          dna = does not apply
          ( ) = footnote appears below second table
          <blank> = testing incomplete on this feature or platform 

Platform                              C         F90/   F90      C++  zlib  SZIP
                                      parallel  F2003  parallel
Solaris2.11 32-bit                      n        y/y    n        y    y     y
Solaris2.11 64-bit                      n        y/y    n        y    y     y
Windows 7                               y        y/y    n        y    y     y
Windows 7 x64                           y        y/y    n        y    y     y
Windows 7 Cygwin                        n        y/y    n        y    y     n 
Windows 8.1                             n        y/y    n        y    y     y
Windows 8.1 x64                         n        y/y    n        y    y     y
Mac OS X Lion 10.7.5 64-bit             n        y/y    n        y    y     y
Mac OS X Mountain Lion 10.8.5 64-bit    n        y/y    n        y    y     y
Mac OS X Mavericks 10.9.5 64-bit        n        y/y    n        y    y     y
Mac OS X Yosemeti 10.10.2 64-bit        n        y/y    n        y    y     y
AIX 6.1 32- and 64-bit                  n        y/n    n        y    y     y
CentOS 5.9 Linux 2.6.18-308 i686 GNU    y        y/y    y        y    y     y
CentOS 5.9 Linux 2.6.18-308 i686 Intel  n        y/y    n        y    y     y
CentOS 5.9 Linux 2.6.18-308 i686 PGI    n        y/y    n        y    y     y
CentOS 5.9 Linux 2.6.18 x86_64 GNU      n        y/y    n        y    y     y
CentOS 5.9 Linux 2.6.18 x86_64 Intel    n        y/y    n        y    y     y
CentOS 6.4 Linux 2.6.32 x86_64 GNU      y        y/y    y        y    y     y
CentOS 6.4 Linux 2.6.32 x86_64 Intel    n        y/y    n        y    y     y
CentOS 6.4 Linux 2.6.32 x86_64 PGI      n        y/y    n        y    y     y
Linux 2.6.32-431.11.2.el6.ppc64         n        y/n    n        y    y     y

Platform                                 Shared  Shared    Shared    Thread-  
                                         C libs  F90 libs  C++ libs  safe     
Solaris2.11 32-bit                         y       y         y         y        
Solaris2.11 64-bit                         y       y         y         y        
Windows 7                                  y       y         y         y
Windows 7 x64                              y       y         y         y
Windows 7 Cygwin                           n       n         n         y
Windows 8.1                                y       y         y         y
Windows 8.1 x64                            y       y         y         y
Mac OS X Lion 10.7.5 64-bit                y       n         y         y        
Mac OS X Mountain Lion 10.8.5 64-bit       y       n         y         y        
Mac OS X Mavericks 10.9.5 64-bit           y       n         y         y
Mac OS X Yosemeti 10.10.2 64-bit           y       n         y         y
AIX 6.1 32- and 64-bit                     y       n         n         y        
CentOS 5.9 Linux 2.6.18-308 i686 GNU       y       y         y         y        
CentOS 5.9 Linux 2.6.18-308 i686 Intel     y       y         y         n        
CentOS 5.9 Linux 2.6.18-308 i686 PGI       y       y         y         n        
CentOS 5.9 Linux 2.6.18 x86_64 GNU         y       y         y         y        
CentOS 5.9 Linux 2.6.18 x86_64 Intel       y       y         y         n        
CentOS 6.4 Linux 2.6.32 x86_64 GNU         y       y         y         n
CentOS 6.4 Linux 2.6.32 x86_64 Intel       y       y         y         n
CentOS 6.4 Linux 2.6.32 x86_64 PGI         y       y         y         n     
Linux 2.6.32-431.11.2.el6.ppc64            y       y         y         n 

Compiler versions for each platform are listed in the preceding
"Supported Platforms" table.


More Tested Platforms
=====================
The following platforms are not supported but have been tested for this release.

    Linux 2.6.18-308.13.1.el5PAE  MPICH mpich 3.1.2 compiled with
    #1 SMP i686 i686 i386             gcc 4.9.1 and gfortran 4.9.1
    (jam)                         g95 (GCC 4.0.3 (g95 0.94!)

    Linux 2.6.18-431.11.2.el6     MPICH mpich 3.1.2 compiled with
    #1 SMP x86_64 GNU/Linux           gcc 4.9.1 and gfortran 4.9.1
    (platypus)                    g95 (GCC 4.0.3 (g95 0.94!)   

    FreeBSD 8.2-STABLE i386       gcc 4.5.4 [FreeBSD] 20110526
    (loyalty)                     gcc 4.6.1 20110527
                                  g++ 4.6.1 20110527
                                  gfortran 4.6.1 20110527

    FreeBSD 8.2-STABLE amd64      gcc 4.5.4 [FreeBSD] 20110526
    (freedom)                     gcc 4.6.1 20110527
                                  g++ 4.6.1 20110527
                                  gfortran 4.6.1 20110527

    Debian7.5.0 3.2.0-4-amd64 #1 SMP Debian 3.2.51-1 x86_64 GNU/Linux
                                  gcc (Debian 4.7.2-5) 4.7.2
                                  GNU Fortran (Debian 4.7.2-5) 4.7.2
                                  (cmake and autotools)

    Fedora20 3.15.3-200.fc20.x86_64 #1 SMP x86_64 x86_64 x86_64 GNU/Linux
                                  gcc (GCC) 4.8.3 20140624 (Red Hat 4.8.3-1)
                                  GNU Fortran (GCC) 4.8.3 20140624 (Red Hat 4.8.3-1)
                                  (cmake and autotools)

    SUSE 13.1 3.11.10-17-desktop #1 SMP PREEMPT x86_64 x86_64 x86_64 GNU/Linux
                                  gcc (SUSE Linux) 4.8.1
                                  GNU Fortran (SUSE Linux) 4.8.1
                                  (cmake and autotools)

    Ubuntu 14.04 3.13.0-35-generic #62-Ubuntu SMP x86_64 GNU/Linux
                                  gcc (Ubuntu/Linaro 4.9.1-0ubuntu1) 4.9.1
                                  GNU Fortran (Ubuntu/Linaro 4.9.1-0ubuntu1) 4.9.1
                                  (cmake and autotools)
    
    Cray Linux Environment (CLE)  PrgEnv-pgi/4.2.34
    hopper.nersc.gov              pgcc 13.6-0 64-bit target on x86-64 Linux -tp istanbul
                                  pgf90 13.6-0 64-bit target on x86-64 Linux -tp istanbul
                                  pgCC 13.6-0 64-bit target on x86-64 Linux -tp istanbul


Known Problems
==============
* On windows platforms in debug configurations, the VFD flush1 tests will fail
  with the split and multi VFD drivers. These tests will display a modal debug 
  dialog which must be answered or wait for the test timeout to expire.
  (ADB - 2014/06/23 - HDFFV-8851)

* CLANG compiler with the options -fcatch-undefined-behavior and -ftrapv
  catches some undefined behavior in the alignment algorithm of the macro DETECT_I
  in H5detect.c (Issue 8147).  Since the algorithm is trying to detect the alignment
  of integers, ideally the flag -fcatch-undefined-behavior shouldn't to be used for
  H5detect.c. In the future, we can separate flags for H5detect.c from the rest of
  the library. (SLU - 2013/10/16)

* Make provided by Solaris fails in "make check". Solaris users should use
  gmake to build and install the HDF5 software. (AKC - 2013/10/08 - HDFFV-8534)

* The h5dump and h5diff utilities occasionally produce different output
  between Linux and Windows systems. This is caused by lower-level library
  routines that fail to write fill values to the user's buffer when reading
  unallocated chunks from datasets that have a fill value set to
  H5D_FILL_VALUE_DEFAULT. Due to platform differences the return of
  spurious data values has only been encountered on Windows 32-bit systems.
  (Issue HDFFV-8247; JP - 2013/03/27)

* The 5.9 C++ compiler on Sun failed to compile a C++ test ttypes.cpp.  It 
  complains with this message:
      "/home/hdf5/src/H5Vprivate.h", line 130: Error: __func__ is not defined.
  
  The reason is that __func__ is a predefined identifier in C99 standard.  The
  HDF5 C library uses it in H5private.h.  The test ttypes.cpp includes 
  H5private.h (H5Tpkg.h<-H5Fprivate.h<-H5Vprivate.h<-H5private.h).  Sun's 5.9
  C++ compiler doesn't support __func__, thus fails to compile the C++ test.
  But Sun's 5.11 C++ compiler does.  To check whether your Sun C++ compiler 
  knows this identifier, try to compile the following simple C++ program:
      #include<stdio.h>

      int main(void)
      {
          printf("%s\n", __func__);
          return 0;
      }
  (SLU - 2012/11/5)

* The C++ and FORTRAN bindings are not currently working on FreeBSD with the
  native release 8.2 compilers (4.2.1), but are working with gcc 4.6 from the
  ports (and probably gcc releases after that).
  (QAK - 2012/10/19)

* The following h5dump test case fails in BG/P machines (and potentially other
  machines that use a command script to launch executables):

   h5dump --no-compact-subset -d "AHFINDERDIRECT::ah_centroid_t[0] it=0 tl=0"
     tno-subset.h5
  
  This is due to the embedded spaces in the dataset name being interpreted
  by the command script launcher as meta-characters, thus passing three
  arguments to h5dump's -d flag. The command passes if run by hand, just
  not via the test script.
  (AKC - 2012/05/03)

* The data conversion test dt_arith.c fails in "long double" to integer
  conversion on Ubuntu 11.10 (3.0.0.13 kernel) with GCC 4.6.1 if the library
  is built with optimization -O3 or -O2.  The older GCC (4.5) or newer kernal
  (3.2.2 on Fedora) doesn't have the problem.  Users should lower the 
  optimization level (-O1 or -O0) by defining CFLAGS in the command line of 
  "configure" like:

      CFLAGS=-O1 ./configure

  This will overwrite the library's default optimization level.
  (SLU - 2012/02/07 - HDFFV-7829)
  This issue is no longer present on Ubuntu 12.10 (3.5.0 kernel) with 
  gcc 4.7.2.

* The STDIO VFD does not work on some architectures, possibly due to 32/64
  bit or large file issues.  The basic STDIO VFD test is known to fail on
  64-bit SunOS 5.10 on SPARC when built with -m64 and 32-bit OS X/Darwin
  10.7.0.  The STDIO VFD test has been disabled while we investigate and
  a fix should appear in a future release.
  (DER - 2011/10/14 - HDFFV-8235)

* h5diff can report inconsistent results when comparing datasets of enum type
  that contain invalid values.  This is due to how enum types are handled in
  the library and will be addressed in a future release.
  (DER - 2011/10/14 - HDFFV-7527)

* The links test can fail under the stdio VFD due to some issues with external
  links.  This will be investigated and fixed in a future release.
  (DER - 2011/10/14 - HDFFV-7768)

* After the shared library support was fixed for some bugs, it was discovered
  that "make prefix=XXX install" no longer works for shared libraries. It
  still works correctly for static libraries. Therefore, if you want to
  install the HDF5 shared libraries in a location such as /usr/local/hdf5,
  you need to specify the location via the --prefix option during configure 
  time. E.g, ./configure --prefix=/usr/local/hdf5 ...
  (AKC - 2011/05/07 - HDFFV-7583)

* The parallel test, t_shapesame, in testpar/, may run for a long time and may
  be terminated by the alarm signal.  If that happens, one can increase the
  alarm seconds (default is 1200 seconds = 20 minutes) by setting the
  environment variable, $HDF5_ALARM_SECONDS, to a larger value such as 3600
  (60 minutes).  Note that the t_shapesame test may fail in some systems 
  (see the "While working on the 1.8.6 release..." problem below).  If 
  it does, it will waste more time if $HDF5_ALARM_SECONDS is set
  to a larger value.
  (AKC - 2011/05/07)

* The C++ and FORTRAN bindings are not currently working on FreeBSD.
  (QAK - 2011/04/26)

* Shared Fortran libraries are not quite working on AIX. While they are
  generated when --enable-shared is specified, the fortran and hl/fortran
  tests fail. We are looking into the issue. HL and C++ shared libraries
  should now be working as intended, however.
  (MAM - 2011/04/20)

* The --with-mpe configure option does not work with Mpich2.
  (AKC - 2011/03/10)

* While working on the 1.8.6 release of HDF5, a bug was discovered that can
  occur when reading from a dataset in parallel shortly after it has been
  written to collectively. The issue was exposed by a new test in the parallel
  HDF5 test suite, but had existed before that. We believe the problem lies with
  certain MPI implementations and/or file systems.

  We have provided a pure MPI test program, as well as a standalone HDF5
  program, that can be used to determine if this is an issue on your system.
  They should be run across multiple nodes with a varying number of processes.
  These programs can be found at:
  http://www.hdfgroup.org/ftp/HDF5/examples/known_problems/
  (NAF - 2011/01/19)

* All the VFL drivers aren't backward compatible.  In H5FDpublic.h, the
  structure H5FD_class_t changed in 1.8.  There is new parameter added to
  get_eoa and set_eoa callback functions.  A new callback function
  get_type_map was added in.  The public function H5FDrealloc was taken
  out in 1.8.  The problem only happens when users define their own driver
  for 1.6 and try to plug in 1.8 library.  Because there's only one user 
  complaining about it, we (Elena, Quincey, and I) decided to leave it as 
  it is (see bug report #1279).  Quincey will make a plan for 1.10.
  (SLU - 2010/02/02)

* The --enable-static-exec configure flag will only statically link libraries
  if the static version of that library is present. If only the shared version
  of a library exists (i.e., most system libraries on Solaris, AIX, and Mac,
  for example, only have shared versions), the flag should still result in a 
  successful compilation, but note that the installed executables will not be 
  fully static. Thus, the only guarantee on these systems is that the 
  executable is statically linked with just the HDF5 library.
  (MAM - 2009/11/04)
  
* Parallel tests failed with 16 processes with data inconsistency at testphdf5
  / dataset_readAll. Parallel tests also failed with 32 and 64 processes with
  collective abort of all ranks at t_posix_compliant / allwrite_allread_blocks
  with MPI IO.
  (CMC - 2009/04/28)

* On an Intel 64 Linux cluster (RH 4, Linux 2.6.9) with Intel 10.0 compilers, 
  use -mp -O1 compilation flags to build the libraries. A higher level of 
  optimization causes failures in several HDF5 library tests. 

* A dataset created or rewritten with a v1.6.3 library or after cannot be read 
  with the v1.6.2 library or before when the Fletcher32 EDC filter is enabled.
  There was a bug in the calculation of the Fletcher32 checksum in the 
  library before v1.6.3; the checksum value was not consistent between big-
  endian and little-endian systems.  This bug was fixed in Release 1.6.3.  
  However, after fixing the bug, the checksum value was no longer the same as 
  before on little-endian system.  Library releases after 1.6.4 can still read 
  datasets created or rewritten with an HDF5 library of v1.6.2 or before.  
  (SLU - 2005/06/30)
